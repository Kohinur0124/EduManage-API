// <auto-generated />
using System;
using EduManage.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduManage.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241120054432_seeddata1")]
    partial class seeddata1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduManage.Domain.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8351),
                            IsDeleted = false,
                            Name = "Toshkent shahri"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8368),
                            IsDeleted = false,
                            Name = "Toshkent viloyati"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8369),
                            IsDeleted = false,
                            Name = "Buxoro voloyati"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8370),
                            IsDeleted = false,
                            Name = "Fargona viloyati"
                        });
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8427),
                            IsDeleted = false,
                            Name = "Komputer injinering fakulteti"
                        });
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentGradeLavel")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8523),
                            CityId = 2,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8525),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 1,
                            IsDeleted = false,
                            Name = "Sevinch Xayriddinobva"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8529),
                            CityId = 2,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8530),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 1,
                            IsDeleted = false,
                            Name = "Sabira Qurbonbekova"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8532),
                            CityId = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8533),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 0,
                            IsDeleted = false,
                            Name = "Sanjar Toirjonov"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8534),
                            CityId = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8535),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 0,
                            IsDeleted = false,
                            Name = "Fayzullo Togonboyev"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8536),
                            CityId = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8537),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 0,
                            IsDeleted = false,
                            Name = "Quvonchbek Toychiyev"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8539),
                            CityId = 3,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8540),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 0,
                            IsDeleted = false,
                            Name = "Azizbek Shodmonov"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8541),
                            CityId = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8542),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 0,
                            IsDeleted = false,
                            Name = "Alisher Amrullayev"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8543),
                            CityId = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8544),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 0,
                            IsDeleted = false,
                            Name = "Jasurbek Abdullayev"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8545),
                            CityId = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8546),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 1,
                            IsDeleted = false,
                            Name = "Jumagul Muhammadjonova"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8548),
                            CityId = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8549),
                            CurrentGradeLavel = 7,
                            DepartmentId = 1,
                            Gender = 1,
                            IsDeleted = false,
                            Name = "Shahnoza Sherqoziyeva"
                        });
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Students_Subjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Students_Subjects_s");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradeLavel")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8470),
                            GradeLavel = 7,
                            IsDeleted = false,
                            Name = "Web dasturlash"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8473),
                            GradeLavel = 7,
                            IsDeleted = false,
                            Name = "Multimedia Dasturlash"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8475),
                            GradeLavel = 7,
                            IsDeleted = false,
                            Name = "Kompyuter ko'rish"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8476),
                            GradeLavel = 7,
                            IsDeleted = false,
                            Name = "SMM"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8478),
                            GradeLavel = 7,
                            IsDeleted = false,
                            Name = "3D texnalogiya"
                        });
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8590),
                            CityId = 1,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8594),
                            Gender = 0,
                            IsDeleted = false,
                            Name = "Sadikov Rustamjon"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8597),
                            CityId = 2,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8598),
                            Gender = 0,
                            IsDeleted = false,
                            Name = "Nematov Abdugani"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8599),
                            CityId = 3,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8600),
                            Gender = 1,
                            IsDeleted = false,
                            Name = "Artikova Muazzam"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8601),
                            CityId = 1,
                            CreatedDate = new DateTime(2024, 11, 20, 10, 44, 31, 945, DateTimeKind.Local).AddTicks(8602),
                            Gender = 1,
                            IsDeleted = false,
                            Name = "Abidova Shahnoza"
                        });
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Teachers_Subjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Teachers_Subjects_s");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Student", b =>
                {
                    b.HasOne("EduManage.Domain.Entities.City", "City")
                        .WithMany("Students")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduManage.Domain.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Students_Subjects", b =>
                {
                    b.HasOne("EduManage.Domain.Entities.Student", "Student")
                        .WithMany("StudentsSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduManage.Domain.Entities.Subject", "Subject")
                        .WithMany("StudentsSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Teacher", b =>
                {
                    b.HasOne("EduManage.Domain.Entities.City", "City")
                        .WithMany("Teachers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Teachers_Subjects", b =>
                {
                    b.HasOne("EduManage.Domain.Entities.Subject", "Subject")
                        .WithMany("TeachersSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduManage.Domain.Entities.Teacher", "Teacher")
                        .WithMany("TeachersSubjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.City", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Department", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Student", b =>
                {
                    b.Navigation("StudentsSubjects");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Subject", b =>
                {
                    b.Navigation("StudentsSubjects");

                    b.Navigation("TeachersSubjects");
                });

            modelBuilder.Entity("EduManage.Domain.Entities.Teacher", b =>
                {
                    b.Navigation("TeachersSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
